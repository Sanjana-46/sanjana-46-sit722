name: CI on testing + push images
on:
  push:
    branches: [ "testing" ]

jobs:
  test_build_push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: customers
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 20

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r backend/product_service/requirements.txt
          pip install -r backend/order_service/requirements.txt
          pip install -r backend/customer_service/requirements.txt
          pip install pytest psycopg2-binary

      - name: Run tests (product)
        run: python -m pytest backend/product_service/tests -q
      - name: Run tests (order)
        run: python -m pytest backend/order_service/tests -q
      - name: Run tests (customer)
        run: python -m pytest backend/customer_service/tests -q

      - name: Docker login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & push product_service
        uses: docker/build-push-action@v6
        with:
          context: ./backend/product_service
          push: true
          tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/product_service:latest

      - name: Build & push order_service
        uses: docker/build-push-action@v6
        with:
          context: ./backend/order_service
          push: true
          tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/order_service:latest

      - name: Build & push customer_service
        uses: docker/build-push-action@v6
        with:
          context: ./backend/customer_service
          push: true
          tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/customer_service:latest
